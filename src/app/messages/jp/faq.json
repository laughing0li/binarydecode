{
    "Index": {
        "faq": "よくある質問",
        "faq1": {
            "title": "1. バイナリコードシステムとは何ですか？",
            "step1": "バイナリコードは、バイナリ数システムの2つのバイナリ数字、0と1を使用してテキストやコンピュータプロセッサの指示を表すシステムです。このコーディングシステムは、すべてのデジタルコンピュータや多くの他のタイプのデジタルシステムの操作の基礎となります。バイナリコードシステムでは、バイナリコード内の各数字はビット（バイナリ数字の略）と呼ばれ、これはコンピューティングにおける最小のデータ単位です。",
            "step2": "バイナリコードは人間の言語に似ていますが、コンピュータ用です。バイナリコードがなければ、コンピュータはデータを保存したり、複雑な計算を実行したりすることができません。"
        },
        "faq2": {
            "title": "2. 16進コードシステムとは何ですか？",
            "step1": "16進数、通常はhexと短縮される、は基数16の数値システムです。10進数システム（基数10）が0から9までの10個の数字を使用するのに対し、16進数システムは値を表すために16個の記号を使用します。これには標準の10進数数字（0から9）と、AからFまでの文字によって表される6つの追加の記号が含まれ、Aは10、Bは11、Cは12、Dは13、Eは14、Fは15を意味します。",
            "step2": "10進コードは数字を表す最も一般的な方法であり、算数や数学で主に使用される主要な数値システムです。"
        },
        "faq3": {
            "title": "3. 8進コードシステムとは何ですか？",
            "step1": "8進コードシステム、または8進コードは、8つの記号：0、1、2、3、4、5、6、および7を使用する基数8の数値システムです。これはバイナリデータのコンパクトな表現であり、各8進数字は3つのバイナリ数字（ビット）を表すため、大きなバイナリ数を人間が読みやすく理解しやすくします。",
            "step2": "8進コードは、長いバイナリコードの読み取りや書き取りの際のエラーの可能性を減らす、より人間が読みやすい方法を提供します。"
        },
        "faq4": {
            "title": "4. バイナリデコードとは何ですか？",
            "step1": "バイナリデコードは、0と1のバイナリ数システムで表されるデータ（バイナリコード）を他の数値フォーマット（例えば、10進数、8進数、16進数）や人間が読めるテキストに変換するプロセスを指します。このプロセスは、バイナリデータが解析、処理、または相互作用のためにより理解しやすい形でデコードまたは表示される必要があるコンピューティングとデジタル通信において基本的です。"
        },
        "faq5": {
            "title": "5. バイナリデコードオンライン翻訳ツールの使用方法は？",
            "step1": "デコードしたいフォーマットを選択します。",
            "step2": "デコード先のフォーマットを選択します。",
            "step3": "デコードしたいバイナリコードを入力または貼り付けます。",
            "step4": "デコードしたいフォーマットの情報が含まれているファイルをアップロードできます。",
            "step5": "デコードボタンをクリックします。",
            "step6": "デコードされた結果をコピーするか、ファイルにダウンロードします。",
            "step7": "フォーマットを交換するためにフォーマットをスワップできます。"
        },
        "faq6": {
            "title": "6. バイナリコードを10進数にデコードする原則。",
            "step1": "例としてバイナリ1101を使用",
            "step2": "右から始めて（最も重要でないビット）、位置は2^0、2^1、2^2、および2^3です",
            "step3": "バイナリコード`1101`は2^3、2^2、2^0に`1`があり、2^1に`0`があることを意味します",
            "step4": "最も右の数字は`1`なので、2^0 X 1 = 1です",
            "step5": "左に移動すると、次の数字は`0`なので、2^1 X 0 = 0です",
            "step6": "次に`1`が再び現れるので、2^2 X 1 = 4です",
            "step7": "そして最も左の`1`は、2^3 X 1 = 8です",
            "step8": "結果を合計すると、1 + 0 + 4 + 8 = 13です"
        },
        "faq7": {
            "title": "7. 10進数をバイナリコードにデコードする原則。",
            "step1": "例として10進数13を使用",
            "step2": "10進数を2で割ります（バイナリコードの基数）",
            "step3": "26 ÷ 2 = 13、余り = 0",
            "step4": "13 ÷ 2 = 6、余り = 1",
            "step5": "6 ÷ 2 = 3、余り = 0",
            "step6": "3 ÷ 2 = 1、余り = 1",
            "step7": "1 ÷ 2 = 0、余り = 1（商が0になったらプロセスは停止します）",
            "step8": "すべての余りを集める：11010がバイナリコードです"
        },
        "faq8": {
            "title": "8. バイナリコードを16進数にデコードする原則。",
            "step1": "バイナリを16進数に変換するには、バイナリ数字を4つのセットにグループ化し（右から始め）、各グループをそれぞれの16進数に変換します。16進数は基数16のシステムで、0-9の数字とA-Fの文字を使用して10から15の値を表します。",
            "step2": "10進数110101101011を例に使用",
            "step3": "まずバイナリをグループ化し、必要に応じて先頭にゼロを追加します：1101 0110 1011 ",
            "step4": "各バイナリグループをそれぞれの16進数に変換",
            "step5": "最も左の`1101`：16進数で（1*2^3 + 1*2^2 + 0*2^1 + 1*2^0 = 13, これは16進数でDです）。",
            "step6": "中央の`0110`：16進数で（0*2^3 + 1*2^2 + 1*2^1 + 0*2^0 = 6）。",
            "step7": "最も右の`1011`：16進数で（1*2^3 + 0*2^2 + 1*2^1 + 1*2^0 = 11, これは16進数でBです）。",
            "step8": "結果：D6B"
        },
        "faq9": {
            "title": "9. 16進数をバイナリコードにデコードする原則。",
            "step1": " 16進数1A3Fを例に使用",
            "step2": "`1`は16進数で`0001`のバイナリです",
            "step3": "`A`は16進数で10を表します。10進数をバイナリに変換すると、`1010`のバイナリです",
            "step4": "`3`は16進数で`0011`のバイナリです",
            "step5": "`F`は16進数で15を表し、`1111`のバイナリです",
            "step6": "結果：0001101000111111",
            "step7": "結果の先頭の0を取り除くこともできます"
        },
        "faq10": {
            "title": "10. バイナリコードを8進数にデコードする原則。",
            "step1": "8進数101110101を例に使用",
            "step2": "バイナリをグループ化：001 011 101 101",
            "step3": "`001`は8進数で`1`に変換されます。",
            "step4": "`011`は8進数で`3`に変換されます。",
            "step5": "`101`は8進数で`5`に変換されます。",
            "step6": "`101`は8進数で`5`に変換されます。",
            "step7": "結果：1355"
        },
        "faq11": {
            "title": "11. 8進数をバイナリコードにデコードする原則。",
            "step1": "8進数3177を例に使用",
            "step2": "`3`は8進数で`011`のバイナリです",
            "step3": "`1`は8進数で`001`のバイナリです",
            "step4": "`7`は8進数で`111`のバイナリです",
            "step5": "`7`は8進数で`111`のバイナリです",
            "step6": "結果：011001111111"
        },
        "faq12": {
            "title": "12. バイナリデコードオンライン翻訳ツールは無料ですか？",
            "step1": "バイナリデコードオンライン翻訳ツールは完全に無料で利用できます。学生、専門家、趣味人、またはバイナリ、8進数、または16進数コードについて単に好奇心がある方は、誰でも費用なしで当ツールを使用できます。"
        },
        "faq13": {
            "title": "13. バイナリデコードオンライン翻訳ツールは安全ですか？",
            "step1": "バイナリデコードオンライン翻訳ツールは、あなたのプライバシーとデータの安全を最優先に考えています。翻訳ツールはリアルタイムであなたのデータを処理し、セッションが終了すると、入力されたデータおよび生成された結果は保存されません。これにより、あなたの情報が機密のまま保たれます。"
        },
        "404": {
            "title": "ページが見つかりません",
            "content": "申し訳ありませんが、お探しのページは見つかりませんでした。",
            "goBack": "ホームに戻る"
        },
        "transfer": {
            "Binary": "バイナリ",
            "Decimal": "デシマル",
            "Hexadecimal": "ヘキサデシマル",
            "Octal": "オクタル",
            "Text": "テキスト",
            "deButton": "デコード",
            "swapButton": "形式を交換"
        },
        "button": {
            "decode": "デコード",
            "swap": "スワップフォーマット"
        },
        "Header": {
            "title": "バイナリデコード"
        }
    },
    "Metadata": {
        "metadata": {
            "title": "バイナリ デコード - バイナリ コード デコーダおよびトランスレータ。",
            "description": "バイナリ デコードは、コード デコーダおよびトランスレータです。 バイナリ デコード 8 進数、2 進数、テキスト、10 進数、16 進数のいずれか 2 進数の間でデコードできる無料のオンライン ツールです。"
        }
    }
}